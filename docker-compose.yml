services:
  postgres:
    image: postgres:15
    container_name: audiohost-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: audiohost
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 5
  redis:
    image: redis:7-alpine
    container_name: audiohost-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  backend:
    ports:
      - '3001:3001'
    build:
      context: .
      target: backend-dev
      dockerfile: Dockerfile
    container_name: audiohost-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./apps/backend:/app/apps/backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/audiohost

  web:
    ports:
      - '3000:3000'
    build:
      context: .
      target: frontend-dev
      dockerfile: Dockerfile
    container_name: audiohost-web
    volumes:
      - ./apps/frontend:/apps/frontend
      - ./nx.json:/apps/nx.json
      - ./tsconfig.base.json:/apps/tsconfig.base.json
    restart: unless-stopped
    environment:
      - VITE_API_GATEWAY=http://localhost:3001

volumes:
  postgres_data:
  redis_data:
