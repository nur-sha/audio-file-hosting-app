generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  role         UserRole @default(USER)
  displayName  String
  fullName     String
  audios       Audio[]
  active       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

enum UserRole {
  USER
  ADMIN
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  audios      Audio[] 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime? 

  @@map("categories")
}

model Audio {
  id          String    @id @default(cuid())
  title       String
  description String?
  filename    String    // Stored filename (e.g., "audio-123.mp3")
  originalName String   // Original upload name
  filePath    String    // Full path to the file
  mimeType    String
  size        Int       // File size in bytes
  duration    Int?      // Will be populated by BullMQ worker (seconds)
  isProcessing Boolean  @default(true)
  
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime? 

  @@map("audios")
}